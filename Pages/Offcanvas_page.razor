@page "/offcanvas"
@inject IJSRuntime JSRuntime

<h3>Menu Offcanvas</h3>

@* <button class="btn btn-primary" @onclick="OpenOffcanvas" type="button" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">Abrir menu lateral</button> *@
<button type="button" class="btn btn-primary" @onclick="OpenOffcanvas">Abrir menu lateral</button>

<BlazorApp1.Shared.Componentes.Offcanvas CerrarOffcanvas="@ControlCerrarOffcanvas" AnchoOffcanvas="800px" IdOffcanvas="@idFicha" TituloOffcanvas="@TituloConContador">

    <Formulario>

        <BlazorApp1.Pages.Operaciones OnContadorCambiado="ActualizarContador">

        </BlazorApp1.Pages.Operaciones>

    </Formulario>
</BlazorApp1.Shared.Componentes.Offcanvas>

@code {
    private string idFicha = "offcanvasCalcular";
    private string tituloFicha = "Operación con numeros";
    private int? contadorCierres = 0;
    

    public string TituloConContador
    {
        get
        {
            return tituloFicha + " - " + contadorCierres?.ToString();
        }
    }

    private async Task OpenOffcanvas()
    {
        //Llamar a la funcion JS para abrir Offcanvas
        await JSRuntime.InvokeVoidAsync("abrirOffCanvas", idFicha);
    }

    private async Task ControlCerrarOffcanvas()
    {
        await JSRuntime.InvokeVoidAsync("CerrarOffcanvas", idFicha);
    }

    private void ActualizarContador (int? contador)
    {
        contadorCierres = contador;
        StateHasChanged();
    }
}